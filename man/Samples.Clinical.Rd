% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Samples.Clinical.R
\name{Samples.Clinical}
\alias{Samples.Clinical}
\title{Retrieve TCGA CDEs verbatim, i.e. not normalized by Firehose.}
\usage{
Samples.Clinical(format = "csv", cohort = "",
  tcga_participant_barcode = "", cde_name = "", page = 1,
  page_size = 250, sort_by = "cohort")
}
\arguments{
\item{format}{A string identifying the data type returned. Using json
requires the jsonlite package. \code{json}, \code{csv} or \code{tsv} are
available. In this package \code{tsv} and \code{csv} are identical.}

\item{cohort}{A character vector indicating the cohort to query,
empty string queries all cohorts. See \code{\link{Metadata.Cohorts}} for
available cohorts.}

\item{tcga_participant_barcode}{A character vector containing TCGA Barcodes.
Empty string returns all patients. Either one gene OR barcode is required.}

\item{cde_name}{Retrieve results only for specified CDEs, per the
Metadata/ClinicalNames function}

\item{page}{Subset to be returned.}

\item{page_size}{Number of records per page, max. is 2000.}

\item{sort_by}{character indicating the to column which is used for sorting.}
}
\value{
A \code{list}, if format is \code{json}, elsewise a \code{data.frame}
}
\description{
This service returns patient clinical data from TCGA, verbatim. It differs
from the Samples/Clinical_FH method by providing access to all TCGA CDEs in
their original form, not merely the subset of CDEs normalized by Firehose for
analyses. Results may be selected by disease cohort, patient barcode or CDE
name, but at least one cohort, barcode, or CDE must be provided. When
filtering by CDE note that only when a patient record contains one or more of
the selected CDEs will it be returned. Visit the Metadata/ClinicalNames api
function to see the entire list of TCGA CDEs that may be queried via this
method. For more information on how clinical data are processed, see our
pipeline documentation. \url{https://confluence.broadinstitute.org/display/GDAC/Documentation#Documentation-ClinicalPipeline}
}
\examples{

format = "json"
cohort = "COAD"
tcga_participant_barcode = ""
cde_name = ""
page = 1
page_size = 250
sort_by = "cohort"

obj = Samples.Clinical(format = format,
                       cohort = cohort,
                       tcga_participant_barcode = tcga_participant_barcode,
                       cde_name = cde_name,
                       page = page,
                       page_size = page_size,
                       sort_by = sort_by)

format = "csv"
obj = Samples.Clinical(format = format,
                       cohort = cohort,
                       tcga_participant_barcode = tcga_participant_barcode,
                       cde_name = cde_name,
                       page = page,
                       page_size = page_size,
                       sort_by = sort_by)

}


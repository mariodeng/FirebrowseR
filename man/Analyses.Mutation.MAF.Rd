% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Analyses.Mutation.MAF.R
\name{Analyses.Mutation.MAF}
\alias{Analyses.Mutation.MAF}
\title{Retrieve MutSig final analysis MAF.}
\usage{
Analyses.Mutation.MAF(format = "csv", cohort = "", tool = "MutSig2CV",
  gene = "", tcga_participant_barcode = "", column = "", page = 1,
  page_size = 250, sort_by = "gene")
}
\arguments{
\item{format}{A string identifying the data type returned. Using json
requires the jsonlite package. \code{json}, \code{csv} or \code{tsv} are
available. In this package \code{tsv} and \code{csv} are identical.}

\item{cohort}{A character vector indicating the cohort to query,
empty string queries all cohorts. See \code{\link{Metadata.Cohorts}} for
available cohorts.}

\item{tool}{Narrow search to include only data/results produced by the selected
Firehose tool.  Available tools are provided in the data frame \code{tools}.}

\item{gene}{A character vector of gene symbols. At least one gene OR Barcode
is required.}

\item{tcga_participant_barcode}{A character vector containing TCGA Barcodes.
Empty string returns all patients. Either one gene OR barcode is required.}

\item{column}{Character vector which data columns/fields to return. Every
subset of \code{colnames} is possible.}

\item{page}{Subset to be returned.}

\item{page_size}{Number of records per page, max. is 2000.}

\item{sort_by}{character indicating the to column which is used for sorting.}
}
\value{
A \code{list}, if format is \code{json}, elsewise a \code{data.frame}
}
\description{
This service returns selected columns from the MAF generated by MutSig.
Results may be filtered by gene, cohort, tool, or barcode, but at least one
gene OR barcode OR cohort must be given.
}
\details{
\code{MutSig2.0}, \code{MutSig2CV} (default) and \code{MutSigCV}. For more
details please visit
\url{https://www.broadinstitute.org/cancer/cga/mutsig_faq}.


Not specifying a patient-, gene- or cohort subset will return all Variants.
This can result in a lot of pages.
}
\examples{
format = "json"
cohort = ""
tool = "MutSig2CV"
gene = c("TP53", "RUNX1")
tcga_participant_barcode = "TCGA-CH-5761"
column = ""
page = 1
page_size = 250
sort_by = c("gene")

obj = Analyses.Mutation.MAF(format = format,
                                cohort = cohort,
                                tool = tool,
                                gene =gene,
                                tcga_participant_barcode = tcga_participant_barcode,
                                column = column,
                                page = page,
                                page_size = page_size,
                                sort_by = sort_by)

format = "csv"
obj = Analyses.Mutation.MAF(format = format,
                                cohort = cohort,
                                tool = tool,
                                gene =gene,
                                tcga_participant_barcode = tcga_participant_barcode,
                                column = column,
                                page = page,
                                page_size = page_size,
                                sort_by = sort_by)

gene = c("TP53", "RUNX1")
tcga_participant_barcode = "TCGA-CH-5761"
cohort = "PRAD"
obj = Analyses.Mutation.MAF(format = format,
                                cohort = cohort,
                                tool = tool,
                                gene =gene,
                                tcga_participant_barcode = tcga_participant_barcode,
                                column = column,
                                page = page,
                                page_size = page_size,
                                sort_by = sort_by)

gene = ""
obj = Analyses.Mutation.MAF(format = format,
                                cohort = cohort,
                                tool = tool,
                                gene = gene,
                                tcga_participant_barcode = tcga_participant_barcode,
                                column = column,
                                page = page,
                                page_size = page_size,
                                sort_by = sort_by)

column = c("tcga_participant_barcode", "Hugo_Symbol", "Variant_Type")
obj = Analyses.Mutation.MAF(format = format,
                                cohort = cohort,
                                tool = tool,
                                gene = gene,
                                tcga_participant_barcode = tcga_participant_barcode,
                                column = column,
                                page = page,
                                page_size = page_size,
                                sort_by = sort_by)

}


% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Samples.mRNASeq.R
\name{Samples.mRNASeq}
\alias{Samples.mRNASeq}
\title{Retrieve mRNASeq data}
\usage{
Samples.mRNASeq(format = "csv", gene = "", cohort = "",
  tcga_participant_barcode = "", sample_type = "", protocol = "RSEM",
  page = 1, page_size = 250, sort_by = "gene")
}
\arguments{
\item{format}{A string identifying the data type returned. Using json
requires the jsonlite package. \code{json}, \code{csv} or \code{tsv} are
available. In this package \code{tsv} and \code{csv} are identical.}

\item{gene}{A character vector of gene symbols. At least one gene OR Barcode
is required.}

\item{cohort}{A character vector indicating the cohort to query,
empty string queries all cohorts. See \code{\link{Metadata.Cohorts}} for
available cohorts.}

\item{tcga_participant_barcode}{A character vector containing TCGA Barcodes.
Empty string returns all patients. Either one gene OR barcode is required.}

\item{sample_type}{A character vector indicating the sample types to query.
Empty string returns all types. See \code{\link{Metadata.SampleTypes}},
for available sample types.}

\item{protocol}{Should RSEM (default) or RPKM data be retrieved.}

\item{page}{Subset to be returned.}

\item{page_size}{Number of records per page, max. is 2000.}

\item{sort_by}{character indicating the to column which is used for sorting.}
}
\value{
A \code{list}, if format is \code{json}, elsewise a \code{data.frame}
}
\description{
This service returns sample-level log2 mRNASeq expression values. Results may
be filtered by gene, cohort, barcode, sample type or characterization
protocol, but at least one gene OR barcode must be supplied.
}
\details{
For further information please see
\url{https://confluence.broadinstitute.org/display/GDAC/FAQ}
}
\examples{
format = "json"
gene = c("AKT3", "RB1", "MAP3K1")
cohort = "BRCA"
tcga_participant_barcode = ""
sample_type = "NT"
protocol = "RSEM"
page = 1
page_size = 250
sort_by = "gene"
obj = Samples.mRNASeq(format = format, gene, cohort, tcga_participant_barcode,
                          sample_type, protocol, page, page_size, sort_by)
# returns a list from json

obj = Samples.mRNASeq(gene = c("TP53", "RUNX1"))
# returns a data frame, default

}


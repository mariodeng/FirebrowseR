% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Analyses.CopyNumber.Genes.Deleted.R
\name{Analyses.CopyNumber.Genes.Deleted}
\alias{Analyses.CopyNumber.Genes.Deleted}
\title{Retrieve Gistic2 significantly deleted genes results.}
\usage{
Analyses.CopyNumber.Genes.Deleted(format = "csv", cohort = "", gene = "",
  q = "", page = 1, page_size = 250, sort_by = "cohort")
}
\arguments{
\item{format}{A string identifying the data type returned. Using json
requires the jsonlite package. \code{json}, \code{csv} or \code{tsv} are
available. In this package \code{tsv} and \code{csv} are identical.}

\item{cohort}{A character vector indicating the cohort to query,
empty string queries all cohorts. See \code{\link{Metadata.Cohorts}} for
available cohorts.}

\item{gene}{A character vector of gene symbols. At least one gene OR Barcode
is required.}

\item{q}{Only return results with Q-value <= given threshold. For details
please see \url{https://www.broadinstitute.org/cancer/cga/mutsig}}

\item{page}{Subset to be returned.}

\item{page_size}{Number of records per page, max. is 2000.}

\item{sort_by}{character indicating the to column which is used for sorting.}
}
\value{
A \code{list}, if format is \code{json}, elsewise a \code{data.frame}
}
\description{
This service provides access to the Gistic2 del_genes.conf_99.txt output data.
At least 1 gene or cohort must be supplied.
}
\examples{
format = "csv"
cohort = ""
gene = "PTEN"
q = 0.05
page = 1
page_size = 250
sort_by = "cohort"

obj = Analyses.CopyNumber.Genes.Deleted(format = format,
                                              cohort = cohort,
                                              gene = gene,
                                              q = q,
                                              page = page,
                                              page_size = page_size,
                                              sort_by = sort_by)

gene = "PFN3"
obj = Analyses.CopyNumber.Genes.Deleted(format = format,
                                              cohort = cohort,
                                              gene = gene,
                                              q = q,
                                              page = page,
                                              page_size = page_size,
                                              sort_by = sort_by)

format = "json"
obj = Analyses.CopyNumber.Genes.Deleted(format = format,
                                              cohort = cohort,
                                              gene = gene,
                                              q = q,
                                              page = page,
                                              page_size = page_size,
                                              sort_by = sort_by)

}


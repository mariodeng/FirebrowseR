% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Metadata.Counts.R
\name{Metadata.Counts}
\alias{Metadata.Counts}
\title{Retrieve sample counts.}
\usage{
Metadata.Counts(format = "csv", date = "", cohort = "",
  sample_type = "", data_type = "", totals = T)
}
\arguments{
\item{format}{A string identifying the data type returned. Using json
requires the jsonlite package. \code{json}, \code{csv} or \code{tsv} are
available. In this package \code{tsv} and \code{csv} are identical.}

\item{date}{Narrow search to one or more Firehose run date stamps. For a list
of available dates see \code{\link{Metadata.Dates}}}

\item{cohort}{A character vector indicating the cohort to query,
empty string queries all cohorts. See \code{\link{Metadata.Cohorts}} for
available cohorts.}

\item{sample_type}{A character vector indicating the sample types to query.
Empty string returns all types. See \code{\link{Metadata.SampleTypes}},
for available sample types.}

\item{data_type}{Narrow search to one or more TCGA data types. Available data
types are provided by the data frame \code{data_types}.}

\item{totals}{Provide an extra column/element giving the total sum of
samples. Not implemented by API...}
}
\description{
Returns the aliquot counts for each disease cohort, per sample type and data
type. The sample type designation of "Tumor" may be used to aggregate the
count of all tumor aliquots into a single number per disease and data type.
See the SampleTypes function for a complete description of sample types.
}
\examples{
format = "csv"
date = "2015_02_04"
cohort = c("PRAD", "BRCA")
sample_type = ""
data_type = ""
totals = TRUE
obj = Metadata.Counts(format = format,
                               date = date,
                               cohort = cohort,
                               sample_type = sample_type,
                               data_type = data_type,
                               totals = totals)

format = "tsv"
cohort = c("PRAD", "BRCA")
sample_type = "Tumor"
data_type = c("methylation", "maf")
totals = TRUE

obj = Metadata.Counts(format = format,
                               date = date,
                               cohort = cohort,
                               sample_type = sample_type,
                               data_type = data_type,
                               totals = totals)

}

